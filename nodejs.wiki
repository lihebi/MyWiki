= Node.js =

[[express]]

== Tmp ==
PaaS for Node.js
* Nodester

== Install ==
{{{class="brush: shell"
$ yum install nodejs
}}}

== Grammar ==
* http
{{{class="brush: js"
var http = require('http');
http.createServer(function(req, res) {
	res.writeHead(200, {'Content-Type': 'text/plain'});
	res.end('Hello World');
}).listen(8080, '0.0.0.0');
//some other header:
res.writeHead(301, { //redirect
	'Location': 'http://xxx.xxx.com'
});

var options = {
	host: 'xxx.com',
	port: 80,
	path: '/'
}
http.get(options, function(res){})
	.on('error', function(e) {
		console.log("err: "+e);
	});
//res
res.statusCode == 200;
}}}

* filesystem
{{{class="brush: js"
var fs = require('fs');
fs.readFile('./index.html', function(error, data) {
	//manipulate 'data'
});
}}}

* socket.io
{{{class="brush: js"
var server = http.createServer(function(){}).listen();
var io = require('socket.io').listen(server);
io.sockets.on('connection', function (socket) {
	console.log("connected");
	socket.on('disconnect', function() {
		console.log("disconnected");
	});
});
}}}

== Hello World ==
a.js
{{{class="brush: javascript"
var http = require('http');
http.createServer(function(req, res) {
	res.writeHead(200, {'Content-Type': 'text/plain'});
	res.end('Hello World\n');
}).listen(1337, '127.0.0.1');
console.log('Server running at http://localhost:1337');
}}}
`$ node a.js`

== Packet Manager ==
npm
{{{class="brush: shell"
npm install [packagename]
npm install -g [packagename] # global install
npm install # find package.json
npm docs [modulename]
npm edit [modulename] // read source code.
npm list

# autoload when modified
npm install -g node-dev
node-dev app
}}}

package.json
{{{class="brush: js"
{
	"name": "Name",
	"version": "0.0.1",
	"dependences": {
		"underscore": "~1.2.1"
	}
}
}}}

