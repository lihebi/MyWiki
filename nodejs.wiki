= Node.js =
[[index|首页]]

%toc

[[express]]

== Tmp ==
PaaS for Node.js
* Nodester

== Install ==
`$ yum install nodejs`

== Grammar ==
=== module ===
{{{class='brush: js'
module.paths //若没有指定require文件的相对路径，且不是核心模块，会通过这个路径查找，很慢
module.exports
exports.func = function(){}
var v = require('./xx');
require.extensions //扩展加载方式
__filename
__dirname
// 下面5个可以使用，是node默认包装的
// 不能exports = xxx, 因为export是形参
(function(exports, require, module, __filename, __dirname) {
    //my file
});
}}}
=== http ===
{{{class="brush: js"
var http = require('http');
http.createServer(function(req, res) {
	res.writeHead(200, {'Content-Type': 'text/plain'});
	res.end('Hello World');
}).listen(8080, '0.0.0.0');
//some other header:
res.writeHead(301, { //redirect
	'Location': 'http://xxx.xxx.com'
});

var options = {
	host: 'xxx.com',
	port: 80,
	path: '/'
}
http.get(options, function(res){})
	.on('error', function(e) {
		console.log("err: "+e);
	});
//res
res.statusCode == 200;
}}}

=== filesystem ===
{{{class="brush: js"
var fs = require('fs');
fs.readFile('./index.html', function(error, data) {
	//manipulate 'data'
});
}}}

=== socket.io ===
{{{class="brush: js"
var server = http.createServer(function(){}).listen();
var io = require('socket.io').listen(server);
io.sockets.on('connection', function (socket) {
	console.log("connected");
	socket.on('disconnect', function() {
		console.log("disconnected");
	});
});
}}}

== Hello World ==
a.js
{{{class="brush: js"
var http = require('http');
http.createServer(function(req, res) {
	res.writeHead(200, {'Content-Type': 'text/plain'});
	res.end('Hello World\n');
}).listen(1337, '127.0.0.1');
console.log('Server running at http://localhost:1337');
}}}
`$ node a.js`

== Packet Manager ==
=== package.json ===
* 只能用"
* ,不能多
{{{
name
description
version
keywords = ["xx", "xx"]
maintainers = [{"name":"Jack", "email":"xx@xx.com", "web":"http://xxx"}, {}, {}]
contributors
bugs
licenses
repositories
dependencies
homepage
os
cup
engine
builtin
directories
implements
scripts
}}}
=== npm ===
{{{class="brush: shell"
npm install [packagename]
npm install -g [packagename] # global install
npm install # find package.json
npm docs [modulename]
npm edit [modulename] # read source code.
npm list

# autoload when modified
npm install -g node-dev
node-dev app

# install from local
npm install <tarball file>
npm install <tarball url>
npm install <folder> # contain package.json

# install from non-official source
npm install underscore --registry=http://registry.url
# set default source
npm config set registry http://registry.url
}}}
