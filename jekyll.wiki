= Jekyll =
Transform your plain text into static blog-aware websites and blogs.

== Install ==
yum install gem([[rubygem]])
gem install jekyll

== Hello World ==
$jekyll new site
$cd site
$jekyll serve
#browse to http://localhost:4000

== Use with github pages ==
`jekyll new .`
`touch .nojekyll` # to disable jekyll


== Disqus ==
Disqus can provide comments for Jekyll.
Just add the following into _layouts/post.html:
{{{class="brush: javascript"

<div id="disqus_thread"></div>
<script type="text/javascript">
	var disqus_shortname = "hebiblog"; //it is specific
	(function() {
		var dsq = document.createElement('script');
		dsq.type = 'text/javascript';
		dsq.async = true;
		dsq.src = '//'+disqus_shortname + '.disqus.com/embed.js';
		(document.getElementsByTagName('head')[0] || document.getElementByTagName('body')[0]).appendChild(dsq);
	})();
</script>

}}}
Use this to show a link to the comments with the name: x comment:
{{{class="brush: javascript"

<script type="text/javascript">
        var disqus_shortname = 'hebiblog';
        (function(){
                var s = document.createElement('script');s.async = true;
                s.type = 'text/javascript';
                s.src = '//'+disqus_shortname + '.disqus.com/count.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(s);
                })();
</script>

<a href="#disqus_thread">Link</a> <!-- Here href can control the link to [3 comment]. Can put at anywhere -->

}}}
